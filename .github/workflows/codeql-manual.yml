# This workflow is manually triggered and due to external restrictions in place.
# This workflow will fail unless the repo is made public.
# CodeQL parses the code of the project with their database to find security flaws and quality issues and known vulnerabilities.
name: CodeQL-Manual

on:
  workflow_dispatch: # Triggered manually via Actions section.

jobs:
  analyze:
    name: CodeQL Scan
    runs-on: ubuntu-latest

    # Required permissions to run properly.
    permissions:
      actions: read
      contents: read
      security-events: writ

    # Runs analysis of C# and JS in parallel.
    strategy:
      fail-fast: false # Keeps going even if different language fails.
      matrix:
        language: [ 'csharp', 'javascript' ] # Languages to analyse.

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Initialise CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis # Runs the CodeQl analysis and uploads results.
        uses: github/codeql-action/analyze@v3
        
      # Installs JQ to read JSON file.  
      - name: Install JQ
        run: sudo apt-get update && sudo apt-get install -y jq

      # Dumps the full results into the console.
      - name: Dump Results In Console
        run: |
          echo "RAW RESULTS"
          cat results.sarif

      # Gives count of issues found.          
      - name: Summary CodeQL Number of Issues
        run: |
          count=$(jq '[.runs[].results[]] | length' results.sarif)
          echo "CodeQL found $count issues."

      # Shows result of found issues in more detail.
      - name: Summary CodeQL Results
        run: |
          echo "CODEQL RESULTS:"
          jq -r '.runs[].results[] | "\(.ruleId): \(.message.text) - \(.locations[0].physicalLocation.artifactLocation.uri):\(.locations[0].physicalLocation.region.startLine)"' results.sarif