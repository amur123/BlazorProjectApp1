# This workflow analyses a dotnet project using SonarQube-Cloud
# For more info: https://docs.sonarsource.com/sonarqube-cloud/
name: SonarQube-Cloud

on:
  push:
# Triggers on push to main branch.
    branches:
      - main

jobs:
  build:
    name: SonarQube-Cloud Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
# Sonar requires the full GitHub history for tracking and analyses.
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

# CLI tool installed for project analyses.
      - name: Install SonarScanner for .NET
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Begin SonarQube-Cloud Analysis
        run: |
         export PATH="$PATH:/home/runner/.dotnet/tools"
         dotnet-sonarscanner begin
           /k:"amur123_BlazorProjectApp1"
           /o:"amur123"
           /d:sonar.token="${{ secrets.github-sonar-token }}"
           /d:sonar.host.url="https://sonarcloud.io"

# Restores the NuGet packages required by solution before building.
      - name: Restore Dependencies
        run: dotnet restore

# Builds the solution to get ready for tests and analyses.
      - name: Build
        run: dotnet build --no-incremental

# Executes the xUnit with bUnit tests.
      - name: Run Tests
        run: dotnet test BlazorProjectApp1.Tests/BlazorProjectApp1.Tests.csproj --no-build

# Finishes the scan and uploads results to SonarQube.
      - name: End SonarQube-Cloud Analysis
        run: dotnet-sonarscanner end /d:sonar.token="${{ secrets.github-sonar-token }}"
