@using Microsoft.JSInterop
@using Microsoft.AspNetCore.Authorization
@using EdgeTTS
@inject IJSRuntime JsRuntime
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
@attribute [Authorize(Roles = "User,Administrator")]

@page "/view/{PostId:int}"

<h1>@_post.Title</h1>

<div class="card mb-4">
    <div class="card-body">
        @if (!string.IsNullOrEmpty(_post.ImageFile))
        {
            <img src="@_post.ImageFile" class="img-fluid mb-3" style="max-height: 400px;" />
        }

        <p class="fs-5">@_post.Content</p>

        @if (!string.IsNullOrWhiteSpace(_post.OcrImageText))
        {
            <hr />
            <h5>Extracted OCR Text</h5>
            <pre>@_post.OcrImageText</pre>

            <button class="btn btn-success mt-2" @onclick="() => ReadOcrTextAsync(_post.OcrImageText)">
                Play
            </button>
            <button class="btn btn-warning mt-2" @onclick="PauseAudioAsync">
                Pause
                </button> 
                <button class="btn btn-danger mt-2" @onclick="StopAudioAsync">
                    Stop
                    </button>
        }
    </div>
</div>

<button @onclick="@(() => NavigationManager.NavigateTo("/"))" class="btn btn-secondary">
    Back to Home
</button>

@code {
    [Parameter] public int PostId { get; set; }
    private Post _post = new();

    protected override async Task OnParametersSetAsync()
    {
        using var context = new ProjectDBContext();
        var found = await context.Posts.FindAsync(PostId);

        if (found is not null)
        {
            _post = found;
        }
        else
        {
            await JsRuntime.InvokeVoidAsync("alert", "Post not found.");
            NavigationManager.NavigateTo("/");
        }
    }
    private async Task ReadOcrTextAsync(string text)
    {
        try
        {
            var outputFile = $"wwwroot/audio/tts_output_{Guid.NewGuid()}.mp3";

            var communicate = new Communicate(text, "en-IE-EmilyNeural");      // Voice can be changed here have applied Irish English female voice.
            await communicate.Save(outputFile);

            var relativePath = outputFile.Replace("wwwroot", "").Replace("\\", "/");
            var url = NavigationManager.BaseUri.TrimEnd('/') + relativePath;

            await JsRuntime.InvokeVoidAsync("audioPlayer.play", url);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"EdgeTTS error: {ex.Message}");
            await JsRuntime.InvokeVoidAsync("alert", "TTS Error.");
        }
    }
    private async Task PauseAudioAsync()
    {
        await JsRuntime.InvokeVoidAsync("audioPlayer.pause");
    }
    private async Task StopAudioAsync()
    {
        await JsRuntime.InvokeVoidAsync("audioPlayer.stop");
    }
}
